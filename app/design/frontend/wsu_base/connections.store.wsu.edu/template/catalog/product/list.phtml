<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
?>

<?php                
	$_productCollection=$this->getLoadedProductCollection();
	$_collectionSize = $_productCollection->count();
    $isSecure = Mage::app()->getFrontController()->getRequest()->isSecure();
    $cookieUrl = rtrim(implode("",explode( ($isSecure?"https":"http") . "://",Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB))),'/');
    setcookie("last_cat", Mage::helper('core/url')->getCurrentUrl(), time()+3600,'/',$cookieUrl);
    $store = Mage::app()->getDefaultStoreView();
    // Gets the current store's id
    $this->_storeId = $store->getStoreId();
?>


<?php if(!$_collectionSize): ?>
<p class="note-msg empty-catalog"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>

<?php
	$_helper = $this->helper('catalog/output');
	$theme = $this->helper('wsu_themecontrol');
	$helpLabels = $this->helper('wsu_themecontrol/labels');
	$helpTemplate = $this->helper('wsu_themecontrol/template');
	//$helpImg = $this->helper('wsu_wsu/image');
	
    $_layout =  $this->helper('wsu_themecontrol/layout')->getLayoutOptions($this);
	
	//Default image size
	//$imgWidth = 295;
	//$imgHeight = 295;
	
	//Aspect ratio settings
	/*if ($theme->getCfg('category/aspect_ratio')) {
		$imgHeight = 0; //Height will be computed automatically (based on width) to keep the aspect ratio
	}*/
	//Hide toolbar
	$hideToolbar = false;
	/*if ($this->getHideToolbar()) {
		$hideToolbar = true;
	}*/
?>

<div class="category-products">
	<?php if (!$hideToolbar): ?>
		<?php echo $this->getToolbarHtml(); ?>
	<?php endif; ?>
	<?php if($this->getMode()=='grid'): //no List mode in this theme ?>
<!-- Grinds -->
	<?php
		//Get grid configuration array
		$gc = $theme->getCfgGroup('category_grid');
        
        $effects = "";
        $animate = $theme->getCfgEffects("effects/product_grid_animation_used");
        if($animate){
            $animate_type = $theme->getCfgEffects("effects/product_grid_animation_type");
            $delay = $theme->getCfgEffects("effects/product_grid_animation_base_delay");
            $duration = $theme->getCfgEffects("effects/product_grid_animation_base_duration");
            
            
            //pg- is used as we want not to animate the grid block but the items
            //to which we have it cued in the base css
            $effects = 'pg-animate pg-'.$animate_type.' pg-'.$delay.' pg-'.$duration;
        }
        //$baseurl = rtrim ( Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB), "/" );
        
	?>
	
	<ul class="<?=$_layout["category-products-grid"]["type"]?> <?=$_layout["category-products-grid"]["spacing"]?> effects <?=$effects?>  products-grid category-products-grid itemgrid itemgrid-adaptive itemgrid-3col centered hover-effect equal-height">
		<?php foreach ($_productCollection as $_product): ?>
			<?php 
                //echo "<h1>".$_product->getProductUrl()."</h1>";
				//$productType=$_product->getTypeID();
				//$product=Mage::getModel('catalog/product')->load($_product->getId());
                
                $productUrl = $_product->getProductUrl();//$product->getProductUrl();
                //$productUrl = parse_url($productUrl);
                //$productUrl = $baseurl.$productUrl["path"];
                $image = $this->helper('catalog/image')->init($_product, 'small_image')->resize(295);//$helpImg->getImg($_product, $imgWidth, $imgHeight, 'small_image')
                $name = $_product->getName();
			?>
		
			<li class="item ">

				<div class="product-image-wrapper <?=$_layout["products-grid-item-image"]["order"]?>" style="max-width:220px;">
					<?php 
						$imgLable = $this->getImageLabel($_product, 'small_image');//$this->stripTags($this->getImageLabel($_product, 'small_image'), null, true); 
					?>
					<a href="<?=$productUrl?>" title="click for details about: <?=$imgLable?>" class="product-image">
						<img src="<?php echo $image; ?>" alt="<?=$imgLable?>" />
						<?php
							/*if ($theme->getCfg('category/alt_image')) {
								echo $theme->getAltImgHtml($_product, $imgWidth, $imgHeight);
							}*/
							echo "<span class='promo_lables'>" . $helpLabels->getLabels($_product) . '</span>'; //Product labels 
						?>
					</a>
					<div class="actions">
						
						<?php
							// Provides extra blocks on which to hang some features for products in the list
							// Features providing UI elements targeting this block will display directly below the product name
							/*if ($this->getChild('name.after')) {
								
								$_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
								$items=[];
								foreach ($_nameAfterChildren as $_nameAfterChildName) {
									if(!in_array($_nameAfterChildName,$items)){
										//echo "<h1>".$_nameAfterChildName."</h1>";
										$items[]=$_nameAfterChildName;
										$_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
										$_nameAfterChild->setProduct($_product);
										echo $_nameAfterChild->toHtml();
									}
								}
							}*/
						?>	
						<?php if ($gc['display_addtocart'] != 0): ?>

							<button type="button" title="<?php echo $this->__('Add to Cart') ?>" class="inline-config-ok button bare btn-cart" data-baseurl="<?=MAGE::helper('checkout/cart')->getAddUrl($_product)?>"><span><?php echo $this->__('Add to Cart') ?></span></button>

						<?php endif; ?>

					</div> <!-- end: actions -->
				</div> <!-- end: product-image-wrapper -->
				<div class="price_and_action  <?=$_layout["products-grid-item-action"]["order"]?>">
					<?php
						echo '<div class="price-area '.$_layout["products-grid-item-price"]["order"].'">'.$this->getPriceHtml($_product, true).'</div>';
					?>
					
					<h2 class="product-name <?=$_layout["products-grid-item-name"]["order"]?>">
					<a href="<?=$productUrl?>" title="click for details about: <?php echo $name;//this->stripTags($_product->getName(), null, true) ?>">
						<?php echo $name;//$_helper->productAttribute($_product, $_product->getName(), 'name') ?>
					</a>
				</h2>
				</div>

			</li>
		<?php endforeach; ?>
        <!-- keep flexbox in check on wrap -->
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
        <li class="item"></li>
	</ul>
	<?php endif; //end: if grid mode ?>

	<?php if (!$hideToolbar): ?>
		<div class="toolbar-bottom">
			<?=$this->getChildHtml('toolbar_bottom')?>
		</div>
	<?php endif; ?>
</div>
<?php endif; ?>
